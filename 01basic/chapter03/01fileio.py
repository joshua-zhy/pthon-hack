# 12. Python文件操作
 
# 文件模式

# 模式	描述
# r	以只读方式打开文件。文件的指针将会放在文件的开头。这时默认模式
# rb	以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这时默认格式
# r+	打开一个文件用于读写。文件指针将会放在文件的开头。
# rb+	以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。
# w	打开一个文件用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件
# wb	以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
# w+	打开一个文件用于读写。如果该文件已存在则打开文件，并从头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件
# wb+	以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
# a	打开一个文件用于追加。如果该文件已存在，文件指针会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入
# ab	以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有的内容之后。如果该文件不存在，创建新文件进行写入。
# a+	打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写
# ab+	以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。

# 巧记文件模式

'''
1. 如果是带b的，不管是r和b配合，还是w、a和b配合，但凡是带b的，都是以二进制格式操作文件
2. 但凡是带+号的，都是可读可写模式。
3. r+ 、rb+、w+都是可读可写有什么区别吗？？？ 所有的访问模式，它的基础特点都要遵循与主访问模式（r、w、a）。比如：rb、r+、rb+都是基于r访问模式拓展开来。
举个栗子:
      比如说r,只读方式打开，如果文件不存在，会报错。如果rb、r+、rb+去打开一个文件，不论是读写还是二进制读写，只要文件不存在，但凡带r的都报错。
      比如说w访问模式的，不管是wb、w+、wb+，如果打开一个文件，文件不存在，则新建文件。这就可以说明w+和r+的区别了。
 
 
注意：     
	1. 文件指针：相当于光标的位置，光标后的内容可以读取出来，光标前的内容读取不出来。文件指针关系着文件写入和读取数据的内容。
    2. a访问模式，以a为基准的访问模式，文件指针都是在结尾，因为在后面才开始追加。
	3. 文件操作不仅有三种主访问模式（r、w、a），依赖这三种主访问模式，还可以拓展好几种访问模式。
    
'''