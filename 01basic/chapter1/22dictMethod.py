# 6.6 集合常见操作（增、删、查）

 
# 增加数据

s1 = {10,20}
# 1. 集合是可变类型
# add() 用来增加一个单一数据到原集合当中来
s1.add(100)
print(s1)      # {100, 10, 20}

# 集合有去重功能，如果追加的数据是集合已有数据，则什么事情都不做
s1.add(100)
print(s1)

# update() 用来增加一个数据序列到原集合当中来
s1.update([10,20,30,40,50])
print(s1)  # 输出 {100, 40, 10, 50, 20, 30} 有去重功能，如果添加的数据原集合中有的，则不进行操作。

# s1.update(299) 不能直接添加单一数据
s1.update([299]) # 这种方式的添加就可以
print(s1)

 
# 删除数据

s1 = {10,20,30}
s2 = {10,20,30}
s3 = {10,20,30}
# 1. remove():删除指定数据，如果数据不存在则报错
s1.remove(10)
print(s1)  # {20, 30}

# s1.remove(333)
# print(s1)  # 报错，以为删除的没有这个数据

# ============================================================================

# 2. discard():删除指定数据，如果数据不存在不报错
s2.discard(10)
print(s2)  # 输出 {20, 30}

s2.discard(666)  # 就算删除的数据不存在也不会报错

# ============================================================================

# 3. pop():随机删除某个数据，并返回这个数据
del_num = s3.pop()  
print(del_num) 		 # 10
print(s1)		# {20, 30}

 
# 查找数据


s1 = {10,20,30,40}

# 用in和not in 判断数据10是否在集合中存在

print(10 in s1)  # Ture
print(10 not in s1)  # False

 
# 6.7 集合小总结

 

'''
创建结合
    有数据集合
        s1 = {数据1，数据2，...}
    无数据集合
        s1 = set()
        
常见操作
    增加数据
        add()
        update()
    删除数据
        remove()
        discard()
'''

